{"version":3,"sources":["uploader.coffee"],"names":[],"mappings":"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","file":"uploader.js","sourcesContent":["uploader = []\n\n$ document \n    .on 'drop dragover', (e)->\n        e.preventDefault()\n        return\n\n$ document\n    .on 'dragleave drop', (e)->\n        $ '.uploader-dropzone'\n            .removeClass 'hover'\n\n$ document\n    .on 'dragover', (e)->\n        dropzone = $ '.uploader-dropzone'\n        timeout = window.dropZoneTimeout\n\n        if (!timeout)\n            dropzone.addClass('in')\n        else\n            clearTimeout(timeout)\n\n        found = false\n        node = e.target\n\n        if $(node).hasClass('uploader-dropzone')\n            if !$(node).hasClass('hover')\n                $(node).addClass 'hover'\n\n        else if $(node).parents('.uploader-dropzone').length > 0\n            if !$(node).parents('.uploader-dropzone').hasClass('hover')\n                $(node).parents('.uploader-dropzone').addClass('hover')\n        else\n            dropzone.removeClass 'hover'\n\n        window.dropZoneTimeout = setTimeout ()->\n            window.dropZoneTimeout = null\n\n            return\n        , 100\n\n        return\n\n$ '.uploader'\n    .each () ->\n        $that = $(this)\n        target = '/admin/inoplate-media/libraries/upload'\n        chunkSize = $(this).data('chunk')\n        maxUploadSize = $(this).data('maxupload')\n        index = uploader.length\n        browseId = \"btn-browse-#{index}\"\n        dropzoneId = \"uploader-dropzone-#{index}\"\n        fileContainerId = \"file-container-#{index}\"\n\n        $ '.file-container', this\n            .attr 'id', fileContainerId\n\n        $ '.uploader-dropzone', this\n            .attr 'id', dropzoneId\n\n        $ '.btn-browse', this\n            .attr 'id', browseId\n\n        ###\n            The simulaneous upload set to 1\n            Its because Laravel framework on server side has mysterious session persistence problem\n        ###\n\n        uploader[index] = new Flow\n            target: target\n            forceChunkSize: true\n            chunkSize: chunkSize\n            simultaneousUploads: 1\n            headers:\n                'X-Requested-With' : 'XMLHttpRequest'\n                'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n\n\n        uploader[index].assignBrowse(document.getElementById(browseId))\n        uploader[index].assignDrop(document.getElementById(dropzoneId))\n\n        uploader[index].on 'fileAdded', (file) ->\n            if file.size > maxUploadSize\n                return false\n\n            $that\n                .trigger 'uploader.fileAdded', [file]\n\n            return\n\n        uploader[index].on 'fileProgress', (file) ->\n            $that\n                .trigger 'uploader.fileProgress', [file]\n\n            return\n\n        uploader[index].on 'filesSubmitted', (file, event) ->\n            uploader[index].upload()\n\n            $that\n                .trigger 'uploader.filesSubmitted', [file, event]\n\n            return\n\n        uploader[index].on 'fileSuccess', (file, message) ->\n            $that\n                .trigger 'uploader.fileSuccess', [file, message]\n\n            return\n\n        uploader[index].on 'fileError', (file, message, chunk) ->\n            $that\n                .trigger 'uploader.fileError', [file, message, chunk]\n\n            return\nreturn"],"sourceRoot":"/source/"}